import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

enum TipoPessoa {
    CLIENTE, FORNECEDOR, AMBOS
}

abstract class Pessoa {
    protected String nome;
    protected TipoPessoa tipoPessoa;

    public Pessoa(String nome, TipoPessoa tipoPessoa) {
        this.nome = nome;
        this.tipoPessoa = tipoPessoa;
    }

    @Override
    public String toString() {
        return "Nome: " + nome + ", Tipo de Pessoa: " + tipoPessoa;
    }
}

class PessoaFisica extends Pessoa {
    private String cpf;

    public PessoaFisica(String nome, TipoPessoa tipoPessoa, String cpf) {
        super(nome, tipoPessoa);
        this.cpf = cpf;
    }

    @Override
    public String toString() {
        return super.toString() + ", CPF: " + cpf;
    }
}

class PessoaJuridica extends Pessoa {
    private String cnpj;

    public PessoaJuridica(String nome, TipoPessoa tipoPessoa, String cnpj) {
        super(nome, tipoPessoa);
        this.cnpj = cnpj;
    }

    @Override
    public String toString() {
        return super.toString() + ", CNPJ: " + cnpj;
    }
}

public class CadastroDePessoas {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Digite o nome da pessoa: ");
        String nome = sc.nextLine();

        System.out.println("Escolha o tipo de pessoa:");
        System.out.println("1 - Pessoa Física");
        System.out.println("2 - Pessoa Jurídica");
        int tipoPessoaOpcao = sc.nextInt();
        sc.nextLine(); // Limpar buffer

        Pessoa pessoa = null;

        if (tipoPessoaOpcao == 1) {
            // Cadastro de Pessoa Física
            String cpf;
            do {
                System.out.print("Digite o CPF (11 caracteres): ");
                cpf = sc.nextLine();
                if (cpf.length() != 11) {
                    System.out.println("CPF inválido! Deve conter exatamente 11 caracteres.");
                }
            } while (cpf.length() != 11);

            System.out.println("Escolha o tipo de vínculo:");
            System.out.println("1 - Cliente");
            System.out.println("2 - Fornecedor");
            System.out.println("3 - Ambos");
            int tipoVinculo = sc.nextInt();
            sc.nextLine(); // Limpar buffer

            TipoPessoa tipoPessoa = switch (tipoVinculo) {
                case 1 -> TipoPessoa.CLIENTE;
                case 2 -> TipoPessoa.FORNECEDOR;
                case 3 -> TipoPessoa.AMBOS;
                default -> {
                    System.out.println("Opção inválida! Definido como CLIENTE.");
                    yield TipoPessoa.CLIENTE;
                }
            };

            pessoa = new PessoaFisica(nome, tipoPessoa, cpf);

        } else if (tipoPessoaOpcao == 2) {
            // Cadastro de Pessoa Jurídica
            String cnpj;
            do {
                System.out.print("Digite o CNPJ (14 caracteres): ");
                cnpj = sc.nextLine();
                if (cnpj.length() != 14) {
                    System.out.println("CNPJ inválido! Deve conter exatamente 14 caracteres.");
                }
            } while (cnpj.length() != 14);

            System.out.println("Escolha o tipo de vínculo:");
            System.out.println("1 - Cliente");
            System.out.println("2 - Fornecedor");
            System.out.println("3 - Ambos");
            int tipoVinculo = sc.nextInt();
            sc.nextLine(); // Limpar buffer

            TipoPessoa tipoPessoa = switch (tipoVinculo) {
                case 1 -> TipoPessoa.CLIENTE;
                case 2 -> TipoPessoa.FORNECEDOR;
                case 3 -> TipoPessoa.AMBOS;
                default -> {
                    System.out.println("Opção inválida! Definido como CLIENTE.");
                    yield TipoPessoa.CLIENTE;
                }
            };

            pessoa = new PessoaJuridica(nome, tipoPessoa, cnpj);

        } else {
            System.out.println("Opção inválida! O programa será encerrado.");
            sc.close();
            return;
        }

        System.out.println("\nCadastro realizado com sucesso!");
        System.out.println(pessoa);

        // Salvar as informações no arquivo
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("cadastro_pessoas.txt", true))) {
            writer.write(pessoa.toString());
            writer.newLine();
            System.out.println("As informações foram salvas no arquivo cadastro_pessoas.txt!");
        } catch (IOException e) {
            System.out.println("Erro ao salvar as informações: " + e.getMessage());
        }

        // Chamar o cadastro de endereço
        CadastroDeEndereco.cadastrarEndereco();

        sc.close();
    }
}
